"""ondelete added for tables

Revision ID: d17a09735277
Revises: ab6a61790506
Create Date: 2025-09-08 16:38:11.727124

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = 'd17a09735277'
down_revision: Union[str, Sequence[str], None] = 'ab6a61790506'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint(op.f('note_tag_map_note_id_fkey'), 'note_tag_map', type_='foreignkey')
    op.drop_constraint(op.f('note_tag_map_tag_id_fkey'), 'note_tag_map', type_='foreignkey')
    op.create_foreign_key(None, 'note_tag_map', 'notes', ['note_id'], ['id'], ondelete='CASCADE')
    op.create_foreign_key(None, 'note_tag_map', 'note_tags', ['tag_id'], ['id'], ondelete='CASCADE')
    op.drop_constraint(op.f('note_tags_user_id_fkey'), 'note_tags', type_='foreignkey')
    op.create_foreign_key(None, 'note_tags', 'users', ['user_id'], ['id'], ondelete='CASCADE')
    op.drop_constraint(op.f('notes_topic_id_fkey'), 'notes', type_='foreignkey')
    op.drop_constraint(op.f('notes_user_id_fkey'), 'notes', type_='foreignkey')
    op.create_foreign_key(None, 'notes', 'topics', ['topic_id'], ['id'], ondelete='CASCADE')
    op.create_foreign_key(None, 'notes', 'users', ['user_id'], ['id'], ondelete='CASCADE')
    op.drop_constraint(op.f('topic_edges_target_fkey'), 'topic_edges', type_='foreignkey')
    op.drop_constraint(op.f('topic_edges_source_fkey'), 'topic_edges', type_='foreignkey')
    op.create_foreign_key(None, 'topic_edges', 'topics', ['source'], ['id'], ondelete='CASCADE')
    op.create_foreign_key(None, 'topic_edges', 'topics', ['target'], ['id'], ondelete='CASCADE')
    op.drop_constraint(op.f('topics_user_id_fkey'), 'topics', type_='foreignkey')
    op.create_foreign_key(None, 'topics', 'users', ['user_id'], ['id'], ondelete='CASCADE')
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint(None, 'topics', type_='foreignkey')
    op.create_foreign_key(op.f('topics_user_id_fkey'), 'topics', 'users', ['user_id'], ['id'])
    op.drop_constraint(None, 'topic_edges', type_='foreignkey')
    op.drop_constraint(None, 'topic_edges', type_='foreignkey')
    op.create_foreign_key(op.f('topic_edges_source_fkey'), 'topic_edges', 'topics', ['source'], ['id'])
    op.create_foreign_key(op.f('topic_edges_target_fkey'), 'topic_edges', 'topics', ['target'], ['id'])
    op.drop_constraint(None, 'notes', type_='foreignkey')
    op.drop_constraint(None, 'notes', type_='foreignkey')
    op.create_foreign_key(op.f('notes_user_id_fkey'), 'notes', 'users', ['user_id'], ['id'])
    op.create_foreign_key(op.f('notes_topic_id_fkey'), 'notes', 'topics', ['topic_id'], ['id'])
    op.drop_constraint(None, 'note_tags', type_='foreignkey')
    op.create_foreign_key(op.f('note_tags_user_id_fkey'), 'note_tags', 'users', ['user_id'], ['id'])
    op.drop_constraint(None, 'note_tag_map', type_='foreignkey')
    op.drop_constraint(None, 'note_tag_map', type_='foreignkey')
    op.create_foreign_key(op.f('note_tag_map_tag_id_fkey'), 'note_tag_map', 'note_tags', ['tag_id'], ['id'])
    op.create_foreign_key(op.f('note_tag_map_note_id_fkey'), 'note_tag_map', 'notes', ['note_id'], ['id'])
    # ### end Alembic commands ###
